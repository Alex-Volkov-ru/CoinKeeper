import logging

from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.exceptions import AiogramError

from utils.exceptions import HomeworkBotError
from keyboards.keyboards import registered_main as kb

router = Router()

@router.message(CommandStart())
async def command_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞–∑–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã /start
    """
    try:
        if not message.from_user:
            raise HomeworkBotError("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!",
            reply_markup=kb
        )
    except HomeworkBotError as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")
    except Exception:
        await message.answer(
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        raise


@router.message(Command("help"))
async def help_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
    """
    try:
        help_text = (
            "‚ùì *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–∞–º –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è:\n\n"
            "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n"
            "/contact - –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
            "/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å - –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\n"
        )
        await message.answer(help_text, reply_markup=kb)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ help_handler: {str(e)}", exc_info=True)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(Command("contact"))
async def contact_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /contact
    """
    try:
        contact_text = (
            "üìû *–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n\n"
            "üìß Email: support@coinkeeper.com\n"
            "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @ximikat01\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!"
        )
        await message.answer(contact_text, reply_markup=kb)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ contact_handler: {str(e)}", exc_info=True)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.errors()
async def error_handler(event: AiogramError):
    """
    –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö –æ—à–∏–±–æ–∫.
    """
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    logging.error(f"–û—à–∏–±–∫–∞: {str(event)}")

    # –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Å—Ç–æ–º–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
    if isinstance(event, HomeworkBotError):
        logging.error(f"–ö–∞—Å—Ç–æ–º–Ω–∞—è –æ—à–∏–±–∫–∞: {str(event)}")
